plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.flywaydb.flyway' version '7.15.0'
}

group = 'importApp'
version = '0.0.2-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
	implementation 'org.flywaydb:flyway-core:7.15.0'
	implementation 'org.apache.poi:poi:4.1.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	implementation 'mysql:mysql-connector-java:8.0.33' // バージョンは適宜変更
	runtimeOnly 'mysql:mysql-connector-java:8.0.33' // MySQL 8.x 用のドライバー
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-crypto'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	dependencies {
		implementation 'org.modelmapper:modelmapper:3.1.0' // 最新版を確認して使用してください
	}

}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:mysql://localhost:3306/importApp'
	user = 'root'
	password = 'rootpassword'
	driver = 'com.mysql.cj.jdbc.Driver'
	locations = ['classpath:db/migration']
	validateOnMigrate = false
}

jar {
	enabled = false
}

bootJar {
	archiveBaseName.set("sbm-app")  // ベース名を設定
	archiveVersion.set("")          // バージョンを除外
	archiveClassifier.set("")       // 分類子を除外
}
